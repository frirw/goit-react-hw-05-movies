{"version":3,"file":"static/js/135.4a4fc453.chunk.js","mappings":"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","sources":["api/Api.js","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '57ef172056d208aed05821847bf78b08';\n\nexport async function getFilmByName(q) {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    query: q,\n  });\n\n  try {\n    const response = await axios.get(`search/movie?${params}`);\n    if (!response.data.results.length) {\n      Notiflix.Notify.failure('No results found');\n      return null;\n    }\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n    return null;\n  }\n}\n\nexport async function getFilmById(id) {\n  try {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure('Failed to fetch film details');\n    return null;\n  }\n}\n\nexport async function getTrendingFilms() {\n  try {\n    const response = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure('Failed to fetch trending films');\n    return null;\n  }\n}\n\nexport async function getCast(id) {\n  try {\n    const response = await axios.get(\n      `movie/${id}/credits?language=en-US&api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure('Failed to fetch cast details');\n    return null;\n  }\n}\n\nexport async function getReviews(id) {\n  try {\n    const response = await axios.get(\n      `movie/${id}/reviews?language=en-US&page=1&api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure('Failed to fetch reviews');\n    return null;\n  }\n}\n\nexport async function getFilmByQuery(query) {\n  try {\n    const response = await axios.get(\n      `search/movie?query=${query}&include_adult=true&page=1&api_key=${API_KEY}`\n    );\n    if (!response.data.results.length) {\n      Notiflix.Notify.failure('No results found');\n      return null;\n    }\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n    return null;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"infoWrapper\":\"MovieDetails_infoWrapper__4SlYR\",\"genresList\":\"MovieDetails_genresList__2o809\"};","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getFilmById } from 'api/Api';\nimport css from './MovieDetails.module.css';\n\nconst DEFAULT_IMAGE =\n  'https://cdn.iconscout.com/icon/free/png-512/free-image-1438822-1214511.png?f=webp&w=512';\n\nconst MovieDetails = () => {\n  const [film, setFilm] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = useRef(location.state?.from || '/');\n\n  useEffect(() => {\n    const fetchFilm = async () => {\n      try {\n        const response = await getFilmById(movieId);\n        setFilm(response);\n      } catch (error) {\n        console.error('Error fetching film:', error);\n      }\n    };\n\n    fetchFilm();\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLink.current}>Go Back</Link>\n      {film && (\n        <div className={css.infoWrapper}>\n          <img\n            src={\n              film.poster_path\n                ? `https://image.tmdb.org/t/p/original${film.poster_path}`\n                : DEFAULT_IMAGE\n            }\n            alt={film.original_title}\n          />\n          <div>\n            <h2>\n              {film.original_title}({parseInt(film.release_date)})\n            </h2>\n            <p>User Score: {parseInt(film.vote_average * 10)}%</p>\n            <h3>Overview</h3>\n            <p>{film.overview}</p>\n            <h3>Genres</h3>\n            <ul className={css.genresList}>\n              {film.genres.map(el => (\n                <li key={el.id}>{el.name}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n      <div>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","API_KEY","getFilmById","_x2","_getFilmById","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee2","id","response","_context2","prev","next","concat","sent","abrupt","data","t0","Notiflix","stop","getTrendingFilms","_getTrendingFilms","_callee3","_context3","getCast","_x3","_getCast","_callee4","_context4","getReviews","_x4","_getReviews","_callee5","_context5","getFilmByQuery","_x5","_getFilmByQuery","_callee6","query","_context6","results","length","message","_location$state","_useState","useState","_useState2","_slicedToArray","film","setFilm","movieId","useParams","location","useLocation","backLink","useRef","state","from","useEffect","fetchFilm","_ref","_callee","_context","console","error","_jsxs","_Fragment","children","_jsx","Link","to","current","className","css","src","poster_path","alt","original_title","parseInt","release_date","vote_average","overview","genres","map","el","name","Suspense","fallback","Outlet"],"sourceRoot":""}