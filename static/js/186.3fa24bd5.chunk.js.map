{"version":3,"file":"static/js/186.3fa24bd5.chunk.js","mappings":"iUAGAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAqBT,SAAeC,EAAWC,GAAA,OAAAC,EAAAC,MAAC,KAADC,UAAA,CAQhC,SAAAF,IAAA,OAAAA,GAAAG,EAAAA,EAAAA,GAAAC,IAAAA,MARM,SAAAC,EAA2BC,GAAE,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAETd,EAAAA,EAAAA,IAAU,SAADe,OAAUL,EAAE,aAAAK,OAAYd,IAAW,KAAD,EAApD,OAARU,EAAQC,EAAAI,KAAAJ,EAAAK,OAAA,SACPN,EAASO,MAAI,OAEoC,OAFpCN,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAEpBQ,IAAAA,OAAAA,QAAwB,gCAAgCR,EAAAK,OAAA,SACjD,MAAI,yBAAAL,EAAAS,OAAA,GAAAZ,EAAA,mBAEdJ,MAAA,KAAAC,UAAA,CAEM,SAAegB,IAAgB,OAAAC,EAAAlB,MAAC,KAADC,UAAA,CAQrC,SAAAiB,IAAA,OAAAA,GAAAhB,EAAAA,EAAAA,GAAAC,IAAAA,MARM,SAAAgB,IAAA,IAAAb,EAAA,OAAAH,IAAAA,MAAA,SAAAiB,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAAAW,EAAAZ,KAAA,EAAAY,EAAAX,KAAA,EAEoBd,EAAAA,EAAAA,IAAU,+BAADe,OAAgCd,IAAW,KAAD,EAA5D,OAARU,EAAQc,EAAAT,KAAAS,EAAAR,OAAA,SACPN,EAASO,MAAI,OAEsC,OAFtCO,EAAAZ,KAAA,EAAAY,EAAAN,GAAAM,EAAA,SAEpBL,IAAAA,OAAAA,QAAwB,kCAAkCK,EAAAR,OAAA,SACnD,MAAI,yBAAAQ,EAAAJ,OAAA,GAAAG,EAAA,mBAEdnB,MAAA,KAAAC,UAAA,CAEM,SAAeoB,EAAOC,GAAA,OAAAC,EAAAvB,MAAC,KAADC,UAAA,CAU5B,SAAAsB,IAAA,OAAAA,GAAArB,EAAAA,EAAAA,GAAAC,IAAAA,MAVM,SAAAqB,EAAuBnB,GAAE,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAsB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAgB,EAAAjB,KAAA,EAAAiB,EAAAhB,KAAA,EAELd,EAAAA,EAAAA,IAAU,SAADe,OACrBL,EAAE,oCAAAK,OAAmCd,IAC9C,KAAD,EAFa,OAARU,EAAQmB,EAAAd,KAAAc,EAAAb,OAAA,SAGPN,EAASO,MAAI,OAEoC,OAFpCY,EAAAjB,KAAA,EAAAiB,EAAAX,GAAAW,EAAA,SAEpBV,IAAAA,OAAAA,QAAwB,gCAAgCU,EAAAb,OAAA,SACjD,MAAI,yBAAAa,EAAAT,OAAA,GAAAQ,EAAA,mBAEdxB,MAAA,KAAAC,UAAA,CAEM,SAAeyB,EAAUC,GAAA,OAAAC,EAAA5B,MAAC,KAADC,UAAA,CAU/B,SAAA2B,IAAA,OAAAA,GAAA1B,EAAAA,EAAAA,GAAAC,IAAAA,MAVM,SAAA0B,EAA0BxB,GAAE,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAA2B,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cAAAqB,EAAAtB,KAAA,EAAAsB,EAAArB,KAAA,EAERd,EAAAA,EAAAA,IAAU,SAADe,OACrBL,EAAE,2CAAAK,OAA0Cd,IACrD,KAAD,EAFa,OAARU,EAAQwB,EAAAnB,KAAAmB,EAAAlB,OAAA,SAGPN,EAASO,MAAI,OAE+B,OAF/BiB,EAAAtB,KAAA,EAAAsB,EAAAhB,GAAAgB,EAAA,SAEpBf,IAAAA,OAAAA,QAAwB,2BAA2Be,EAAAlB,OAAA,SAC5C,MAAI,yBAAAkB,EAAAd,OAAA,GAAAa,EAAA,mBAEd7B,MAAA,KAAAC,UAAA,CAEM,SAAe8B,EAAcC,GAAA,OAAAC,EAAAjC,MAAC,KAADC,UAAA,CAcnC,SAAAgC,IAAA,OAAAA,GAAA/B,EAAAA,EAAAA,GAAAC,IAAAA,MAdM,SAAA+B,EAA8BC,GAAK,IAAA7B,EAAA,OAAAH,IAAAA,MAAA,SAAAiC,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,cAAA2B,EAAA5B,KAAA,EAAA4B,EAAA3B,KAAA,EAEfd,EAAAA,EAAAA,IAAU,sBAADe,OACRyB,EAAK,uCAAAzB,OAAsCd,IACjE,KAAD,EAFa,IAARU,EAAQ8B,EAAAzB,MAGAE,KAAKwB,QAAQC,OAAO,CAADF,EAAA3B,KAAA,QACa,OAA5CM,IAAAA,OAAAA,QAAwB,oBAAoBqB,EAAAxB,OAAA,SACrC,MAAI,cAAAwB,EAAAxB,OAAA,SAENN,EAASO,MAAI,QAEmB,OAFnBuB,EAAA5B,KAAA,GAAA4B,EAAAtB,GAAAsB,EAAA,SAEpBrB,IAAAA,OAAAA,QAAwBqB,EAAAtB,GAAMyB,SAASH,EAAAxB,OAAA,SAChC,MAAI,yBAAAwB,EAAApB,OAAA,GAAAkB,EAAA,oBAEdlC,MAAA,KAAAC,UAAA,C,yGCnDD,UA5BgB,WACd,IAAAuC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAClBI,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OAPAE,EAAAA,EAAAA,YAAU,YACR9C,EAAAA,EAAAA,GAAAC,IAAAA,MAAC,SAAA8C,IAAA,IAAAC,EAAA,OAAA/C,IAAAA,MAAA,SAAAgD,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,cAAA0C,EAAA1C,KAAA,GACsBiB,EAAAA,EAAAA,IAAWoB,GAAS,KAAD,EAAlCI,EAAMC,EAAAxC,KACZkC,EAAWK,EAAOb,SAAS,wBAAAc,EAAAnC,OAAA,GAAAiC,EAAA,IAF7B/C,EAIF,GAAG,CAAC4C,KAGFM,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACsB,IAAnBV,EAAQN,QACPc,EAAAA,EAAAA,KAAA,OAAAE,SAAK,+CAELF,EAAAA,EAAAA,KAAA,MAAAE,SACGV,EAAQW,KAAI,SAAAC,GAAE,OACbC,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,CAAI,WAASE,EAAGE,WAChBN,EAAAA,EAAAA,KAAA,KAAAE,SAAIE,EAAGG,YAFAH,EAAGnD,GAGP,OAMjB,C","sources":["api/Api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '57ef172056d208aed05821847bf78b08';\n\nexport async function getFilmByName(q) {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    query: q,\n  });\n\n  try {\n    const response = await axios.get(`search/movie?${params}`);\n    if (!response.data.results.length) {\n      Notiflix.Notify.failure('No results found');\n      return null;\n    }\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n    return null;\n  }\n}\n\nexport async function getFilmById(id) {\n  try {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure('Failed to fetch film details');\n    return null;\n  }\n}\n\nexport async function getTrendingFilms() {\n  try {\n    const response = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure('Failed to fetch trending films');\n    return null;\n  }\n}\n\nexport async function getCast(id) {\n  try {\n    const response = await axios.get(\n      `movie/${id}/credits?language=en-US&api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure('Failed to fetch cast details');\n    return null;\n  }\n}\n\nexport async function getReviews(id) {\n  try {\n    const response = await axios.get(\n      `movie/${id}/reviews?language=en-US&page=1&api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure('Failed to fetch reviews');\n    return null;\n  }\n}\n\nexport async function getFilmByQuery(query) {\n  try {\n    const response = await axios.get(\n      `search/movie?query=${query}&include_adult=true&page=1&api_key=${API_KEY}`\n    );\n    if (!response.data.results.length) {\n      Notiflix.Notify.failure('No results found');\n      return null;\n    }\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n    return null;\n  }\n}\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'api/Api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    (async () => {\n      const result = await getReviews(movieId);\n      setReviews(result.results);\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length === 0 ? (\n        <div>We don't have any reviews for this movie.</div>\n      ) : (\n        <ul>\n          {reviews.map(el => (\n            <li key={el.id}>\n              <h4>Author: {el.author}</h4>\n              <p>{el.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n"],"names":["axios","API_KEY","getFilmById","_x2","_getFilmById","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee2","id","response","_context2","prev","next","concat","sent","abrupt","data","t0","Notiflix","stop","getTrendingFilms","_getTrendingFilms","_callee3","_context3","getCast","_x3","_getCast","_callee4","_context4","getReviews","_x4","_getReviews","_callee5","_context5","getFilmByQuery","_x5","_getFilmByQuery","_callee6","query","_context6","results","length","message","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","movieId","useParams","useEffect","_callee","result","_context","_jsx","_Fragment","children","map","el","_jsxs","author","content"],"sourceRoot":""}