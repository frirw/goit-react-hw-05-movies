{"version":3,"file":"static/js/414.93b9e1fb.chunk.js","mappings":"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","sources":["api/Api.js","components/MovieList/MovieList.jsx","components/Form/Form.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '57ef172056d208aed05821847bf78b08';\n\nexport async function getFilmByName(q) {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    query: q,\n  });\n\n  try {\n    const response = await axios.get(`search/movie?${params}`);\n    if (!response.data.results.length) {\n      Notiflix.Notify.failure('No results found');\n      return null;\n    }\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n    return null;\n  }\n}\n\nexport async function getFilmById(id) {\n  try {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure('Failed to fetch film details');\n    return null;\n  }\n}\n\nexport async function getTrendingFilms() {\n  try {\n    const response = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure('Failed to fetch trending films');\n    return null;\n  }\n}\n\nexport async function getCast(id) {\n  try {\n    const response = await axios.get(\n      `movie/${id}/credits?language=en-US&api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure('Failed to fetch cast details');\n    return null;\n  }\n}\n\nexport async function getReviews(id) {\n  try {\n    const response = await axios.get(\n      `movie/${id}/reviews?language=en-US&page=1&api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure('Failed to fetch reviews');\n    return null;\n  }\n}\n\nexport async function getFilmByQuery(query) {\n  try {\n    const response = await axios.get(\n      `search/movie?query=${query}&include_adult=true&page=1&api_key=${API_KEY}`\n    );\n    if (!response.data.results.length) {\n      Notiflix.Notify.failure('No results found');\n      return null;\n    }\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n    return null;\n  }\n}\n","import { Link, useLocation } from 'react-router-dom';\n\nconst MovieList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {films.map(el => (\n        <li key={el.id}>\n          <Link to={`/movies/${el.id}`} state={{ from: location }}>\n            {el.original_title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import { useState } from 'react';\n\nconst Form = ({ onSubmit }) => {\n  const [input, setInput] = useState('');\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    onSubmit(evt.target.query.value);\n    setInput('');\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"query\"\n        onChange={handleChange}\n        value={input}\n        required\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default Form;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getFilmByQuery } from 'api/Api';\nimport MovieList from 'components/MovieList/MovieList';\nimport Form from 'components/Form/Form';\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n    (async () => {\n      const getFilms = await getFilmByQuery(query);\n      setFilms([...getFilms.results]);\n    })();\n  }, [query]);\n\n  const onFormSubmit = q => {\n    setSearchParams({ query: q });\n  };\n\n  return (\n    <>\n      <Form onSubmit={onFormSubmit} />\n      {films.length > 0 && <MovieList films={films} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","API_KEY","getFilmById","_x2","_getFilmById","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee2","id","response","_context2","prev","next","concat","sent","abrupt","data","t0","Notiflix","stop","getTrendingFilms","_getTrendingFilms","_callee3","_context3","getCast","_x3","_getCast","_callee4","_context4","getReviews","_x4","_getReviews","_callee5","_context5","getFilmByQuery","_x5","_getFilmByQuery","_callee6","query","_context6","results","length","message","_ref","films","location","useLocation","_jsx","children","map","el","Link","to","state","from","original_title","onSubmit","_useState","useState","_useState2","_slicedToArray","input","setInput","_jsxs","evt","preventDefault","target","value","type","name","onChange","e","required","setFilms","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","useEffect","_callee","getFilms","_context","_toConsumableArray","_Fragment","Form","q","MovieList"],"sourceRoot":""}